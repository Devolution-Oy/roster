name: Roster master

on:
  push:
    branches: [ master ]

jobs:
  staging:
    runs-on: ubuntu-latest
    env:
      REACT_APP_FIREBASE_APP_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_APP_ID_STAGING }}
      REACT_APP_FIREBASE_AUTH_DOMAIN_STAGING: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN_STAGING }}
      REACT_APP_FIREBASE_DATABASE_STAGING: ${{ secrets.REACT_APP_FIREBASE_DATABASE_STAGING }}
      REACT_APP_FIREBASE_KEY_STAGING: ${{ secrets.REACT_APP_FIREBASE_KEY_STAGING }}
      REACT_APP_FIREBASE_MEASUREMENT_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID_STAGING }}
      REACT_APP_FIREBASE_PROJECT_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID_STAGING }}
      REACT_APP_FIREBASE_SENDER_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_SENDER_ID_STAGING }}
      REACT_APP_FIREBASE_STORAGE_BUCKET_STAGING: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET_STAGING }}
      REACT_APP_TESTER_UID_STAGING: ${{ secrets.REACT_APP_TESTER_UID_STAGING }}
      REACT_APP_DEPLOY_ENV: staging
      REACT_APP_ROSTER_GH_APP_PUB_KEY: ${{ secrets.REACT_APP_ROSTER_GH_APP_PUB_KEY }}
      REACT_APP_ROSTER_GH_APP_PRIVATE_KEY: ${{ secrets.REACT_APP_ROSTER_GH_APP_PRIVATE_KEY }}
      REACT_APP_ROSTER_GITHUB_APP_ID: ${{ secrets.REACT_APP_ROSTER_GITHUB_APP_ID }}
      TASKER_APP_ID: ${{ secrets.TASKER_APP_ID }}
      CI: 1
    steps:
      - uses: actions/checkout@master
        with:
          submodules: true
      - uses: actions/setup-node@master
      - name: Install front end dependencies 
        run: npm ci
        working-directory: ./roster-front
      - name: Front-end unittests
        run: npm run test
        working-directory: ./roster-front
      - name: Build front-end
        run: npm run build
        working-directory: ./roster-front
      - name: Install functions dependencies
        run: npm ci
        working-directory: ./functions
      - name: Set tasker app id config to functions
        uses: w9jds/firebase-action@master
        with:
          args: functions:config:set tasker_app_id.value="${{ secrets.TASKER_APP_ID }}" && firebase deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID_STAGING }}
      - name: Run functions unittests
        run: npm run test
        working-directory: ./functions
      - name: Deploy firebase to staging env
        uses: w9jds/firebase-action@master
        with:
          args: deploy -P roster-test-e37b6 --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          TASKER_APP_ID: ${{ secrets.TASKER_APP_ID }}
      - name: Run Robot tests
        run: |
          docker build -t rfcontainer .
          docker run -v ${PWD}:/home/robot --rm rfcontainer -v USER_PW:${{ secrets.TEST_USER_PW }} -v FB_PROJECT:roster-test-e37b6 -L TRACE -e not-ready
        working-directory: ./testautomation
      - name: Upload test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: reports-staging
          path: ./testautomation/logs

  deploy_production:
    needs: staging
    runs-on: ubuntu-latest
    env:
      REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
      REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
      REACT_APP_FIREBASE_DATABASE: ${{ secrets.REACT_APP_FIREBASE_DATABASE }}
      REACT_APP_FIREBASE_KEY: ${{ secrets.REACT_APP_FIREBASE_KEY }}
      REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
      REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
      REACT_APP_FIREBASE_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_SENDER_ID }}
      REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
      REACT_APP_ROSTER_GH_APP_PUB_KEY: ${{ secrets.REACT_APP_ROSTER_GH_APP_PUB_KEY }}
      REACT_APP_ROSTER_GH_APP_PRIVATE_KEY: ${{ secrets.REACT_APP_ROSTER_GH_APP_PRIVATE_KEY }}
      REACT_APP_ROSTER_GITHUB_APP_ID: ${{ secrets.REACT_APP_ROSTER_GITHUB_APP_ID }}
      REACT_APP_DEPLOY_ENV: production 
      TASKER_APP_ID: ${{ secrets.TASKER_APP_ID }}
      CI: 1
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - uses: actions/setup-node@master
    - run: npm ci 
      working-directory: ./roster-front
    - run: npm run test
      working-directory: ./roster-front
    - run: npm run build
      working-directory: ./roster-front
    - run: npm ci 
      working-directory: ./functions
    - name: Set tasker app id config to functions
      uses: w9jds/firebase-action@master
      with:
        args: functions:config:set tasker_app_id.value="${{ secrets.TASKER_APP_ID }}" && firebase deploy --only functions
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
    - name: Deploy firebase to production
      uses: w9jds/firebase-action@master
      with:
        args: deploy -P devolution-roster --only hosting
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        TASKER_APP_ID: ${{ secrets.TASKER_APP_ID }}
    - name: Run Robot tests
      run: |
        docker build -t rfcontainer .
        docker run -v ${PWD}:/home/robot --rm rfcontainer -v USER_PW:${{ secrets.TEST_USER_PW }} -v FB_PROJECT:devolution-roster -L TRACE -e not-ready
      working-directory: ./testautomation
    - name: Upload test results
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: reports-production
        path: ./testautomation/logs

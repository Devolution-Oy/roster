name: Roster master

on:
  push:
    branches: [ master ]

jobs:
  staging:
    runs-on: ubuntu-latest
    env:
      REACT_APP_FIREBASE_APP_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_APP_ID_STAGING }}
      REACT_APP_FIREBASE_AUTH_DOMAIN_STAGING: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN_STAGING }}
      REACT_APP_FIREBASE_DATABASE_STAGING: ${{ secrets.REACT_APP_FIREBASE_DATABASE_STAGING }}
      REACT_APP_FIREBASE_KEY_STAGING: ${{ secrets.REACT_APP_FIREBASE_KEY_STAGING }}
      REACT_APP_FIREBASE_MEASUREMENT_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID_STAGING }}
      REACT_APP_FIREBASE_PROJECT_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID_STAGING }}
      REACT_APP_FIREBASE_SENDER_ID_STAGING: ${{ secrets.REACT_APP_FIREBASE_SENDER_ID_STAGING }}
      REACT_APP_FIREBASE_STORAGE_BUCKET_STAGING: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET_STAGING }}
      DEPLOY_ENV: staging
      CI: 1
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
      - name: Install front end dependencies 
        run: npm ci
        working-directory: ./roster-front
      - name: Front-end unittests
        run: npm run test
        working-directory: ./roster-front
      - name: Build front-end
        run: npm run build
        working-directory: ./roster-front
      - name: Insall functions dependencies
        run: npm ci
        working-directory: ./functions
      - name: Run functions unittests
        run: npm run test
        working-directory: ./functions
      - name: Deploy firebase to staging env
        uses: w9jds/firebase-action@master
        with:
          args: deploy -P staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Run robot tests in staging env
        run: echo "TODO"

  deploy_production:
    needs: staging
    runs-on: ubuntu-latest
    env:
      REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
      REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
      REACT_APP_FIREBASE_DATABASE: ${{ secrets.REACT_APP_FIREBASE_DATABASE }}
      REACT_APP_FIREBASE_KEY: ${{ secrets.REACT_APP_FIREBASE_KEY }}
      REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
      REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
      REACT_APP_FIREBASE_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_SENDER_ID }}
      REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
      DEPLOY_ENV: production 
      CI: 1
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
    - run: npm install
      working-directory: ./roster-front
    - run: npm run test
      working-directory: ./roster-front
    - run: npm run build
      working-directory: ./roster-front
    - run: npm install
      working-directory: ./functions
    - name: Deploy firebase to production
      uses: w9jds/firebase-action@master
      with:
        args: deploy -P production
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    - name: Run robot tests in production
      run: echo "TODO"
